a=1
Leistung
Leistung.new
Leistung
Leistung
Leistung
a = {id: 1, name: "hugo", leistungen: {id: 1, anzahl: 23}}
a.to_yaml
puts a.to_yaml
a = {id: 1, name: "hugo", leistungen: [{id: 1, anzahl: 23}, {id:2, anzahl:20}]}
puts a.to_yaml
a = [{id: 1, name: "hugo", leistungen: [{id: 1, anzahl: 23}, {id:2, anzahl:20}]}]
puts a.to_yaml
App.main
App.main
App.main
x = App.main
x[0]
x = App.main
App.main
k = Kunde.new("Herr Barbier", 4)
k = Kunde.new("Herr Barbier", 4)
Time.now + 1.day
DateTime.now + 1.day
Time.now + 1.hour
Time.now + 1.hours
DateTime.now
DateTime.now + 13
k = Kunde.new("Herr Barbier", 4)
DateTime.now << 2
(DateTime.now..(DateTime.now << 2))
DateTime.now.wday
k = Kunde.new("Herr Barbier", 4)
k = Kunde.new("Herr Barbier", 4)
k = Kunde.new("Herr Barbier", 4)
k = Kunde.new("Herr Barbier", 4)
k.erstgespraech?
k = Kunde.new("Herr Barbier", 4)
k = Kunde.new("Herr Barbier", 4)
k = Kunde.new("Herr Barbier", 4)
k = Kunde.new("Herr Barbier", 4)
k = Kunde.new("Herr Barbier", 4)
k = Kunde.new("Herr Barbier", 4)
k.leistungen
k = Kunde.new("Herr Barbier", 2)
k = Kunde.new("Herr Barbier", 2)
k = Kunde.new("Herr Barbier", 2)
k.pauschale
k = Kunde.new("Herr Barbier", 2)
k.pauschale
k = Kunde.new("Herr Barbier", 2)
k = Kunde.new("Herr Barbier", 4)
k = Kunde.new("Herr Barbier", 4)
k = Kunde.new("Herr Barbier", 2)
k = Kunde.new("Herr Barbier", 1)
k = Kunde.new("Herr Barbier", 1)
k.zeitraum
k.zeitraum[0]
k.zeitraum.first
k = Kunde.new("Herr Barbier", 1)
k.anzahl
(DateTime.now..(DateTime.now << 2))
k = Kunde.new("Herr Barbier", 1)
k.anzahl
k = Kunde.new("Herr Barbier", 1)
k.anzahl
k = Kunde.new("Herr Barbier", 1)
k.anzahl(0)
k.anzahl(1)
k.anzahl(2)
k.anzahl(3)
k.anzahl(4)
k = Kunde.new("Herr Barbier", 1)
k.anzahl(0)
k.anzahl(6)
k = Kunde.new("Herr Barbier", 1)
k.anzahl(0)
k = Kunde.new("Herr Barbier", 1)
k.anzahl([0,6])
k = Kunde.new("Herr Barbier", 1)
k.anzahl([0,6])
t = DateTime.parse("2020-08-01")
t1 = DateTime.parse("2020-08-01")
t2 = DateTime.parse("2020-12-01")
t = (t1..t2)
k = Kunde.new("Herr Barbier", 1, t)
k.anzahl([0,6])
a = [1,2,3]
a.at(0)
a.index(a.at(0))
a.index(a.at(0))
k = Kunde.new("Herr Barbier", 1)
k.anzahl([0,6])
x =k.anzahl([0,6])
x = k.anzahl([0,6])
x.sum
k = Kunde.new("Herr Barbier", 1)
k.monat
k = Kunde.new("Herr Barbier", 1)
x =k.monat([0,6])
k = Kunde.new("Herr Barbier", 1)
k.monat([1,3])
k = Kunde.new("Herr Barbier", 1)
k.monat([1,3])
k
k = Kunde.new("Herr Barbier", 1)
k.monat([1,3])
k = Kunde.new("Herr Barbier", 1)
k.monat([1,3])
k = Kunde.new("Herr Barbier", 1)
k.monat([1,3])
k = Kunde.new("Herr Barbier", 1)
k.monat([1,3])
k = Kunde.new("Herr Barbier", 1)
k.add([1,3])
k = Kunde.new("Herr Barbier", 1)
k.add([1,3])
k = Kunde.new("Herr Barbier", 1)
k.add()
k = Kunde.new("Herr Barbier", 1)
k.add()
k = Kunde.new("Herr Barbier", 1)
k.add
k = Kunde.new("Herr Barbier", 1)
k.add
k = Kunde.new("Herr Barbier", 2)
k.add
k = Kunde.new("Herr Barbier", 4)
k.add
k.add
k = Kunde.new("Herr Barbier", 4)
k.add
k.add(DateTime.parse("2021-01-01"))
k = Kunde.new("Herr Barbier", 4)
k.add(DateTime.parse("2021-01-01"))
k.add(DateTime.parse("2021-02-01"))
k = Kunde.new("Herr Barbier", 4)
k.add(DateTime.parse("2021-02-01"))
k = Kunde.new("Herr Barbier", 4)
k.add(DateTime.parse("2021-02-01"))
k = Kunde.new("Herr Barbier", 4)
k.add(DateTime.parse("2021-02-01"))
Leistungen.Gesamt
Leistung.Gesamt
k = Kunde.new("Herr Barbier", 4)
k.add(DateTime.parse("2021-02-01"))
x = k.add(DateTime.parse("2021-02-01"))
k.add(DateTime.parse("2021-02-01"))
k = Kunde.new("Herr Barbier", 4)
k.add(DateTime.parse("2021-02-01"))
k = Kunde.new("Herr Barbier", 4)
k.add(DateTime.parse("2021-02-01"))
x = k.add(DateTime.parse("2021-02-01"))
Posten.Rechnung(x)
k.add(DateTime.parse("2021-02-01"))
k = Kunde.new("Herr Barbier", 4)
k.add(DateTime.parse("2021-02-01"))
x = k.add(DateTime.parse("2021-02-01"))
Posten.Rechnung(x)
k = Kunde.new("Herr Barbier", 4)
x = k.add(DateTime.parse("2021-02-01"))
Posten.Rechnung(x)
k = Kunde.new("Herr Barbier", 4)
x = k.add(DateTime.parse("2021-02-01"))
Posten.Rechnung(x)
k = Kunde.new("Herr Barbier", 4)
x = k.add(DateTime.parse("2021-02-01"))
Posten.Rechnung(x)
k = Kunde.new("Herr Barbier", 4)
x = k.monatsrechnung(DateTime.parse("2021-02-01"))
Posten.Rechnung(x)
DateTime.parse("1.11.2020")
k = Kunde.new("Herr Barbier", 4, "1.8.2020", "1.12.2020")
x = k.monatsrechnung(DateTime.parse("2021-02-01"))
Posten.Rechnung(x)
App.main
k = Kunde.new("Herr Barbier", 4, "1.8.2020", "1.12.2020")
App.main
App.main
App.main
App.main
x = App.main
k = x.first
r = k.monatsrechnung(DateTime.parse("2021-02-01"))
px = k.monatsrechnung(DateTime.parse("2021-02-01"))
r = k.monatsrechnung(DateTime.parse("2021-02-01"))
Posten.Rechnung(r)
x = App.main
k = x.first
r = k.monatsrechnung(DateTime.parse("2021-02-01"))
px = k.monatsrechnung(DateTime.parse("2021-02-01"))
Rechnung.new(px)
x = App.main
k = x.first
a = []
a << k.monatsrechnung(DateTime.parse("2021-02-01"))
a = []
px = k.monatsrechnung(DateTime.parse("2021-02-01"))
a << Rechnung.new(px)
px = k.monatsrechnung(DateTime.parse("2021-03-01"))
a << Rechnung.new(px)
a
Rechnung.monatsabrechnung(a)
Rechnung.monatsabrechnung(a)
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
x = App.main
x.values
x.values.flatten
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
k = Kunde.new("Herr Barbier", 4, "1.8.2020", "1.12.2020")
k = Kunde.new(1, "Herr Barbier", 4, "1.8.2020", "1.12.2020")
k.aktiv?("1.11.2020")
k = Kunde.new(1, "Herr Barbier", 4, "1.8.2020", "1.12.2020")
k.aktiv?("1.11.2020")
k.zeitraum
k = Kunde.new(1, "Herr Barbier", 4, DateTime.parse("1.8.2020"), DateTime.parse("1.12.2020"))
k = Kunde.new(1, "Herr Barbier", 4, DateTime.parse("1.8.2020"), DateTime.parse("1.12.2020"))
k.aktiv?("1.11.2020")
k.aktiv?("2.12.2020")
k.aktiv?("1.12.2020")
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
App.main
a = 1.2
a.to_s
a.to_s.gsub(".", ",")
class Float
def tx
puts "hh"
end
end
a = 1.2
a.tx
a.to_i
App.main
App.main
App.main
App.main
App.main
Leistung.Katalog
Leistung.Katalog
Leistung.Katalog
Leistung.Katalog
x = Leistung.Katalog
x = Leistung.Gesamt
x.sort
x = Leistung.Katalog
x = Leistung.Katalog
x = Leistung.Katalog
x = Leistung.Katalog
k = Kunde.new(1, "Herr Barbier", 4, DateTime.parse("1.8.2020"), DateTime.parse("1.12.2020"))
px = k.monatsrechnung(DateTime.parse("2021-03-01"))
px = k.monatsrechnung("2021-03-01")
p = px.first
p.to_csv
p.to_csv.class
CSV.read("./kunden.csv")
table = CSV.parse(File.read("kunden.csv"), headers: true)
table[1]
table[1].to_h
table[0].to_h
table[0].to_a
CSV.read("./kunden.csv")[1..-1]
Leistung.Preisliste
Umsatzprognose::Config
Umsatzprognose::Config.PUNKTWERT
Umsatzprognose.PUNKTWERT
Umsatzprognose::PUNKTWERT
Pflegedienst.punktwert
Pflegedienst::punktwert
Pflegedienst::pp
call(Pflegedienst::pp9
call(Pflegedienst::pp)
Leistung.PUNKTWERT
Leistung.PUNKTWERT(DateTime.parse("2021-08-01")
)
Leistung.PUNKTWERT(DateTime.parse("2021-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2021-08-01"))
DateTime.now.year
Leistung.PUNKTWERT(DateTime.parse("2021-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2021-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2021-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2021-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2021-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2021-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2021-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2021-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2021-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2022-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2022-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2022-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2022-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2022-08-01"))
0.049 * 1.002
0.049 * 1.006
0.049 * 1.06
0.049 * 1.02
0.049 * 1.04
Leistung.PUNKTWERT(DateTime.parse("2022-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2020-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2020-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2021-08-01"))
Leistung.PUNKTWERT(DateTime.parse("20222-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2022-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2022-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2022-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2022-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2022-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2022-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2021-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2020-08-01"))
(0.051234 * 100).round/100 
(0.051234 * 100).round/100.0
(0.051234 * 1000).round/1000.0
Leistung.PUNKTWERT(DateTime.parse("2020-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2021-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2022-08-01"))
(0.049234 * 1000).round/1000.0
(0.049934 * 1000).round/1000.0
(0.049934 * 1000).round(2)/1000.0
(0.049934 * 100).round(2)/100.0
(0.049934 * 10).round(2)/10.0
(0.049934 * 1000).round(3)/1000.0
(0.049934 * 1000).round/1000.0
(0.049934 * 1000)/1000.0
(0.049934 * 1000).round/1000.0
(0.049934 * 1000).round(2)/1000.0
(0.049934 * 1000).round(2)/1000.0
Leistung.PUNKTWERT(DateTime.parse("2022-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2021-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2020-08-01"))
Leistung.PUNKTWERT(DateTime.parse("2022-08-01"))
x = Leistung.PUNKTWERT(DateTime.parse("2022-08-01"))
x
x*100
Faker::Name.name 
require 'faker'
Faker::Name.name 
Faker::Name.name 
Faker::Name.name 
Faker::Name.name 
Faker::Name.name 
Faker::Name.name 
Faker::Name.name 
Faker::Name.unique.name
Faker::Name.unique.name
Faker::Name.unique.name
Faker::Name.unique.name
Faker::Name.unique.name
Faker::Name.unique.name
Faker::Name.unique.name
Faker::Name.unique.name
Faker::Name.unique.name
Faker::Name.unique.name
Faker::Name.unique.name
Faker::Name.unique.name
Faker::Name.unique.name
Faker::Name.unique.name
Faker::Name.unique.name
Faker::Name.unique.name
Faker::Name.unique.name
Pool.create
Pool.create
a = []
Pool.profile
Pool.profile
Pool.profile
Pool.zeitraum
Pool.zeitraum.sample
Pool.zeitraum.sample
Pool.zeitraum.sample
Pool.create
Pool.create
Pool.create
Pool.create
Pool.create
x = Pool.create
[[1,2,3,4], [2,3,4,1]]
a = [[1,2,3,4], [2,3,4,1]]
a.sort_by{|e| e[-1]}
Faker::Config.locale "Dadimo"
Faker::Config.locale = "Dadimo"
Faker::Name
Faker::Name.name
Faker::Config.locale = 'Dadimo'
Faker::Name.name
Faker::Config.locale = 'de_Da'
Faker::Config.locale = 'de'
Faker::Name.name
Faker::Config.locale = 'de_da'
Faker::Name.name
Faker::Config.locale = 'de_Da'
Faker::Name.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
n = YAML.load_file("./namen.yml")
Plegedienst::NAMEN
Pflegedienst::NAMEN
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
(1..10).sample
(1..10).random
(1..10).to_a.sample
(1..10).to_a.sample
v = Verlauf.new
v.first
v = Verlauf.new
v.kurve
CSV.read("./verlauf.csv")
CSV.read("./verlauf.csv").to_h
CSV.read("./verlauf.csv", headers: true).to_h
CSV.read("./verlauf.csv").to_h
table = CSV.parse(File.read("./verlauf.csv"), headers: true)
table[1]
table.to_h
table
table.first
table.first.to_h
table = CSV.parse(File.read("./verlauf.csv"), headers: true)
v = Verlauf.new
table = CSV.parse(File.read("./verlauf.csv"), headers: true)
v = Verlauf.new
v.first
v[0]
v.kurve[0]
v.kurve[1]
v = Verlauf.new
v.suche("08.2020")
v.suche("09.2020")
v = Verlauf.new
v.
v.suche("09.2020")
v.suche("02.2021")
v = Verlauf.new
v.suche("02.2021")
v.suche("01.02.2021")
p = Pflegedienst::NAMEN
p = Pflegedienst::NAMEN["first_name"]
px = Pflegedienst::NAMEN["first_name"]
px.each do |p| puts p end
px = Pflegedienst::NAMEN["first_name"]
px.each do |p| open('vornamen.yml', 'a') { |f| "#{p}\n"}
end
File.open("vornamen.yml", "w+") do |f| f.puts(px) end
px = Pflegedienst::NAMEN["last_name"]
File.open("nachnamen.yml", "w+") do |f| f.puts(px) end
Pflegedienst::NAMEN
Pflegedienst::NAMEN
Pflegedienst::VORNAMEN
Pflegedienst::NACHNAMEN
Pool.name
Pool.name
Pflegedienst::VORNAMEN
Pflegedienst::VORNAMEN
Pflegedienst::VORNAMEN
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
Pool.name
